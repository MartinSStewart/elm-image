name: Build

on:
  push:
    branches:
      - master

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Setup Node.js for use with actions
      uses: actions/setup-node@v1.1.0
      with:
        node-version: 12.x

    - name: Get yarn cache
      id: yarn-cache
      run: echo "::set-output name=dir::$(yarn cache dir)"
    - uses: actions/cache@v1.0.3
      id: yarn-cache-exists
      with:
        path: ${{ steps.yarn-cache.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install Dependencies
      if: steps.yarn-cache-exists.outputs.cache-hit != 'true'
      run: yarn

    - name: Test
      run: yarn run elm-test

#    - name: Build
#      run: |
#        cd examples
#        yarn run elm make src/Main.elm --optimize --output=./gh-pages/bundle.min.js
##      working-directory: examples
#
##  - uses: ./.github/actions/hello-world-action
#    - name: Optimize Javascript
#      run: |
#        yarn run jscodeshift -t transform.js ./examples/gh-pages/bundle.min.js
#        yarn run uglifyjs ./examples/gh-pages/bundle.min.js --compress 'pure_funcs="F2,F3,F4,F5,F6,F7,F8,F9,A2,A3,A4,A5,A6,A7,A8,A9",pure_getters,keep_fargs=false,unsafe_comps,unsafe' | uglifyjs --mangle --output=./examples/gh-pages/bundle.min.js
#        yarn run posthtml ./examples/gh-pages/index.html -o ./examples/gh-pages/index.html -c posthtml.config.js

#    - name: Run a one-line script
#      run: echo Hello, world!
#    - name: Run a multi-line script
#      run: |
#        echo Add other actions to build,
#        echo test, and deploy your project.
